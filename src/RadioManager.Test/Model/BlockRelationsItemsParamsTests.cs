/* 
 * Pluxbox Radiomanager Client
 *
 * Pluxbox RadioManager gives you the power, flexibility and speed you always wanted in a lightweight and easy-to-use web-based radio solution. With Pluxbox RadioManager you can organise your radio workflow and automate your omnichannel communication with your listeners. We offer wide range specialised services for the radio and connections like Hybrid Radio, Visual Radio, your website and social media without losing focus on your broadcast. For more information visit https://pluxbox.com
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using RadioManager.Api;
using RadioManager.Model;
using RadioManager.Client;
using System.Reflection;

namespace RadioManager.Test
{
    /// <summary>
    ///  Class for testing BlockRelationsItemsParams
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class BlockRelationsItemsParamsTests
    {
        // TODO uncomment below to declare an instance variable for BlockRelationsItemsParams
        //private BlockRelationsItemsParams instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of BlockRelationsItemsParams
            //instance = new BlockRelationsItemsParams();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BlockRelationsItemsParams
        /// </summary>
        [Test]
        public void BlockRelationsItemsParamsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" BlockRelationsItemsParams
            //Assert.IsInstanceOfType<BlockRelationsItemsParams> (instance, "variable 'instance' is a BlockRelationsItemsParams");
        }

        /// <summary>
        /// Test the property 'BlockId'
        /// </summary>
        [Test]
        public void BlockIdTest()
        {
            // TODO unit test for the property 'BlockId'
        }

    }

}
