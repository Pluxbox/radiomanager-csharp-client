/* 
 * RadioManager
 *
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using RadioManager.Client;
using RadioManager.Api;
using RadioManager.Model;

namespace RadioManager.Test
{
    /// <summary>
    ///  Class for testing ModelTypeApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ModelTypeApiTests
    {
        private ModelTypeApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ModelTypeApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModelTypeApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ModelTypeApi
            //Assert.IsInstanceOfType(typeof(ModelTypeApi), instance, "instance is a ModelTypeApi");
        }

        /// <summary>
        /// Test GetModelTypeById
        /// </summary>
        [Test]
        public void GetModelTypeByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //string orderDirection = null;
            //long? externalStationId = null;
            //var response = instance.GetModelTypeById(id, orderDirection, externalStationId);
            //Assert.IsInstanceOf<ModelTypeResult> (response, "response is ModelTypeResult");
        }
        /// <summary>
        /// Test ListModelTypes
        /// </summary>
        [Test]
        public void ListModelTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? programId = null;
            //long? broadcastId = null;
            //long? itemId = null;
            //long? campaignId = null;
            //long? presenterId = null;
            //long? contactId = null;
            //string model = null;
            //string orderDirection = null;
            //long? externalStationId = null;
            //var response = instance.ListModelTypes(programId, broadcastId, itemId, campaignId, presenterId, contactId, model, orderDirection, externalStationId);
            //Assert.IsInstanceOf<InlineResponse2009> (response, "response is InlineResponse2009");
        }
    }

}
