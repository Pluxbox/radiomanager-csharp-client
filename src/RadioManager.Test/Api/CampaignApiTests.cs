/* 
 * RadioManager
 *
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using RadioManager.Client;
using RadioManager.Api;
using RadioManager.Model;

namespace RadioManager.Test
{
    /// <summary>
    ///  Class for testing CampaignApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CampaignApiTests
    {
        private CampaignApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CampaignApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CampaignApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CampaignApi
            //Assert.IsInstanceOfType(typeof(CampaignApi), instance, "instance is a CampaignApi");
        }

        /// <summary>
        /// Test CreateCampaign
        /// </summary>
        [Test]
        public void CreateCampaignTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CampaignDataInput body = null;
            //var response = instance.CreateCampaign(body);
            //Assert.IsInstanceOf<InlineResponse2002> (response, "response is InlineResponse2002");
        }
        /// <summary>
        /// Test DeleteCampaignById
        /// </summary>
        [Test]
        public void DeleteCampaignByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.DeleteCampaignById(id);
            //Assert.IsInstanceOf<InlineResponse202> (response, "response is InlineResponse202");
        }
        /// <summary>
        /// Test GetCampaignById
        /// </summary>
        [Test]
        public void GetCampaignByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? id = null;
            //var response = instance.GetCampaignById(id);
            //Assert.IsInstanceOf<CampaignResult> (response, "response is CampaignResult");
        }
        /// <summary>
        /// Test ListCampaigns
        /// </summary>
        [Test]
        public void ListCampaignsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //long? itemId = null;
            //long? modelTypeId = null;
            //DateTime? startMin = null;
            //DateTime? startMax = null;
            //long? page = null;
            //long? limit = null;
            //string orderBy = null;
            //string orderDirection = null;
            //long? externalStationId = null;
            //var response = instance.ListCampaigns(itemId, modelTypeId, startMin, startMax, page, limit, orderBy, orderDirection, externalStationId);
            //Assert.IsInstanceOf<InlineResponse2004> (response, "response is InlineResponse2004");
        }
        /// <summary>
        /// Test UpdateCampaignByID
        /// </summary>
        [Test]
        public void UpdateCampaignByIDTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CampaignDataInput body = null;
            //long? id = null;
            //var response = instance.UpdateCampaignByID(body, id);
            //Assert.IsInstanceOf<InlineResponse202> (response, "response is InlineResponse202");
        }
    }

}
