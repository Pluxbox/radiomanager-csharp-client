/* 
 * Pluxbox Radiomanager Client
 *
 * Pluxbox RadioManager gives you the power, flexibility and speed you always wanted in a lightweight and easy-to-use web-based radio solution. With Pluxbox RadioManager you can organise your radio workflow and automate your omnichannel communication with your listeners. We offer wide range specialised services for the radio and connections like Hybrid Radio, Visual Radio, your website and social media without losing focus on your broadcast. For more information visit https://pluxbox.com
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using RadioManager.Client;
using RadioManager.Api;
using RadioManager.Model;

namespace RadioManager.Test
{
    /// <summary>
    ///  Class for testing VisualSlideApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class VisualSlideApiTests
    {
        private VisualSlideApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new VisualSlideApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of VisualSlideApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' VisualSlideApi
            //Assert.IsInstanceOfType(typeof(VisualSlideApi), instance, "instance is a VisualSlideApi");
        }

        
        /// <summary>
        /// Test DownloadVisualSlide
        /// </summary>
        [Test]
        public void DownloadVisualSlideTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.DownloadVisualSlide();
            //Assert.IsInstanceOf<VisualImageResult> (response, "response is VisualImageResult");
        }
        
        /// <summary>
        /// Test GetVisualSlide
        /// </summary>
        [Test]
        public void GetVisualSlideTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetVisualSlide();
            //Assert.IsInstanceOf<VisualResult> (response, "response is VisualResult");
        }
        
    }

}
