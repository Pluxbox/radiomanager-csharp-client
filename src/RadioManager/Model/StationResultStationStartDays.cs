/* 
 * RadioManager
 *
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RadioManager.Client.SwaggerDateConverter;

namespace RadioManager.Model
{
    /// <summary>
    /// StationResultStationStartDays
    /// </summary>
    [DataContract]
    public partial class StationResultStationStartDays :  IEquatable<StationResultStationStartDays>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StationResultStationStartDays" /> class.
        /// </summary>
        /// <param name="Monday">Monday.</param>
        /// <param name="Tuesday">Tuesday.</param>
        /// <param name="Wednesday">Wednesday.</param>
        /// <param name="Thursday">Thursday.</param>
        /// <param name="Friday">Friday.</param>
        /// <param name="Saturday">Saturday.</param>
        /// <param name="Sunday">Sunday.</param>
        public StationResultStationStartDays(string Monday = default(string), string Tuesday = default(string), string Wednesday = default(string), string Thursday = default(string), string Friday = default(string), string Saturday = default(string), string Sunday = default(string))
        {
            this.Monday = Monday;
            this.Tuesday = Tuesday;
            this.Wednesday = Wednesday;
            this.Thursday = Thursday;
            this.Friday = Friday;
            this.Saturday = Saturday;
            this.Sunday = Sunday;
        }
        
        /// <summary>
        /// Gets or Sets Monday
        /// </summary>
        [DataMember(Name="monday", EmitDefaultValue=false)]
        public string Monday { get; set; }

        /// <summary>
        /// Gets or Sets Tuesday
        /// </summary>
        [DataMember(Name="tuesday", EmitDefaultValue=false)]
        public string Tuesday { get; set; }

        /// <summary>
        /// Gets or Sets Wednesday
        /// </summary>
        [DataMember(Name="wednesday", EmitDefaultValue=false)]
        public string Wednesday { get; set; }

        /// <summary>
        /// Gets or Sets Thursday
        /// </summary>
        [DataMember(Name="thursday", EmitDefaultValue=false)]
        public string Thursday { get; set; }

        /// <summary>
        /// Gets or Sets Friday
        /// </summary>
        [DataMember(Name="friday", EmitDefaultValue=false)]
        public string Friday { get; set; }

        /// <summary>
        /// Gets or Sets Saturday
        /// </summary>
        [DataMember(Name="saturday", EmitDefaultValue=false)]
        public string Saturday { get; set; }

        /// <summary>
        /// Gets or Sets Sunday
        /// </summary>
        [DataMember(Name="sunday", EmitDefaultValue=false)]
        public string Sunday { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StationResultStationStartDays {\n");
            sb.Append("  Monday: ").Append(Monday).Append("\n");
            sb.Append("  Tuesday: ").Append(Tuesday).Append("\n");
            sb.Append("  Wednesday: ").Append(Wednesday).Append("\n");
            sb.Append("  Thursday: ").Append(Thursday).Append("\n");
            sb.Append("  Friday: ").Append(Friday).Append("\n");
            sb.Append("  Saturday: ").Append(Saturday).Append("\n");
            sb.Append("  Sunday: ").Append(Sunday).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StationResultStationStartDays);
        }

        /// <summary>
        /// Returns true if StationResultStationStartDays instances are equal
        /// </summary>
        /// <param name="input">Instance of StationResultStationStartDays to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StationResultStationStartDays input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Monday == input.Monday ||
                    (this.Monday != null &&
                    this.Monday.Equals(input.Monday))
                ) && 
                (
                    this.Tuesday == input.Tuesday ||
                    (this.Tuesday != null &&
                    this.Tuesday.Equals(input.Tuesday))
                ) && 
                (
                    this.Wednesday == input.Wednesday ||
                    (this.Wednesday != null &&
                    this.Wednesday.Equals(input.Wednesday))
                ) && 
                (
                    this.Thursday == input.Thursday ||
                    (this.Thursday != null &&
                    this.Thursday.Equals(input.Thursday))
                ) && 
                (
                    this.Friday == input.Friday ||
                    (this.Friday != null &&
                    this.Friday.Equals(input.Friday))
                ) && 
                (
                    this.Saturday == input.Saturday ||
                    (this.Saturday != null &&
                    this.Saturday.Equals(input.Saturday))
                ) && 
                (
                    this.Sunday == input.Sunday ||
                    (this.Sunday != null &&
                    this.Sunday.Equals(input.Sunday))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Monday != null)
                    hashCode = hashCode * 59 + this.Monday.GetHashCode();
                if (this.Tuesday != null)
                    hashCode = hashCode * 59 + this.Tuesday.GetHashCode();
                if (this.Wednesday != null)
                    hashCode = hashCode * 59 + this.Wednesday.GetHashCode();
                if (this.Thursday != null)
                    hashCode = hashCode * 59 + this.Thursday.GetHashCode();
                if (this.Friday != null)
                    hashCode = hashCode * 59 + this.Friday.GetHashCode();
                if (this.Saturday != null)
                    hashCode = hashCode * 59 + this.Saturday.GetHashCode();
                if (this.Sunday != null)
                    hashCode = hashCode * 59 + this.Sunday.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
