/* 
 * RadioManager
 *
 * RadioManager
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RadioManager.Client.SwaggerDateConverter;

namespace RadioManager.Model
{
    /// <summary>
    /// BroadcastResult
    /// </summary>
    [DataContract]
    public partial class BroadcastResult :  IEquatable<BroadcastResult>, IValidatableObject
    {
        /// <summary>
        /// Gets or Sets RepetitionType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RepetitionTypeEnum
        {
            
            /// <summary>
            /// Enum _1week for "1 week"
            /// </summary>
            [EnumMember(Value = "1 week")]
            _1week = 1,
            
            /// <summary>
            /// Enum _2weeks for "2 weeks"
            /// </summary>
            [EnumMember(Value = "2 weeks")]
            _2weeks = 2,
            
            /// <summary>
            /// Enum _4weeks for "4 weeks"
            /// </summary>
            [EnumMember(Value = "4 weeks")]
            _4weeks = 3,
            
            /// <summary>
            /// Enum _1month for "1 month"
            /// </summary>
            [EnumMember(Value = "1 month")]
            _1month = 4
        }

        /// <summary>
        /// Gets or Sets RepetitionType
        /// </summary>
        [DataMember(Name="repetition_type", EmitDefaultValue=false)]
        public RepetitionTypeEnum? RepetitionType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BroadcastResult" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BroadcastResult() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BroadcastResult" /> class.
        /// </summary>
        /// <param name="Id">Id (required).</param>
        /// <param name="UpdatedAt">UpdatedAt (required).</param>
        /// <param name="CreatedAt">CreatedAt (required).</param>
        /// <param name="DeletedAt">DeletedAt (required).</param>
        /// <param name="ExternalStationId">ExternalStationId.</param>
        /// <param name="ProgramId">ProgramId.</param>
        /// <param name="ModelTypeId">ModelTypeId.</param>
        /// <param name="StationId">StationId.</param>
        /// <param name="FieldValues">FieldValues.</param>
        /// <param name="Title">Title.</param>
        /// <param name="Start">Start.</param>
        /// <param name="Stop">Stop.</param>
        /// <param name="GenreId">GenreId.</param>
        /// <param name="Description">Description.</param>
        /// <param name="ShortName">ShortName.</param>
        /// <param name="MediumName">MediumName.</param>
        /// <param name="Website">Website.</param>
        /// <param name="Email">Email.</param>
        /// <param name="Recommended">Recommended.</param>
        /// <param name="Language">Language.</param>
        /// <param name="Published">Published.</param>
        /// <param name="RepetitionUid">RepetitionUid.</param>
        /// <param name="RepetitionType">RepetitionType.</param>
        /// <param name="RepetitionEnd">RepetitionEnd.</param>
        /// <param name="RepetitionStart">RepetitionStart.</param>
        /// <param name="RepetitionDays">RepetitionDays.</param>
        /// <param name="PtyCodeId">PtyCodeId.</param>
        /// <param name="Genre">Genre.</param>
        /// <param name="Items">Items.</param>
        /// <param name="Blocks">Blocks.</param>
        /// <param name="Program">Program.</param>
        /// <param name="Tags">Tags.</param>
        /// <param name="Presenters">Presenters.</param>
        /// <param name="ModelType">ModelType.</param>
        public BroadcastResult(long? Id = default(long?), DateTime? UpdatedAt = default(DateTime?), DateTime? CreatedAt = default(DateTime?), DateTime? DeletedAt = default(DateTime?), long? ExternalStationId = default(long?), long? ProgramId = default(long?), long? ModelTypeId = default(long?), long? StationId = default(long?), Object FieldValues = default(Object), string Title = default(string), DateTime? Start = default(DateTime?), DateTime? Stop = default(DateTime?), long? GenreId = default(long?), string Description = default(string), string ShortName = default(string), string MediumName = default(string), string Website = default(string), string Email = default(string), bool? Recommended = default(bool?), string Language = default(string), bool? Published = default(bool?), string RepetitionUid = default(string), RepetitionTypeEnum? RepetitionType = default(RepetitionTypeEnum?), DateTime? RepetitionEnd = default(DateTime?), DateTime? RepetitionStart = default(DateTime?), string RepetitionDays = default(string), long? PtyCodeId = default(long?), BroadcastRelationsGenre Genre = default(BroadcastRelationsGenre), BroadcastRelationsItems Items = default(BroadcastRelationsItems), BroadcastRelationsBlocks Blocks = default(BroadcastRelationsBlocks), BlockRelationsProgram Program = default(BlockRelationsProgram), BroadcastRelationsTags Tags = default(BroadcastRelationsTags), BroadcastRelationsPresenters Presenters = default(BroadcastRelationsPresenters), BroadcastRelationsModelType ModelType = default(BroadcastRelationsModelType))
        {
            // to ensure "Id" is required (not null)
            if (Id == null)
            {
                throw new InvalidDataException("Id is a required property for BroadcastResult and cannot be null");
            }
            else
            {
                this.Id = Id;
            }
            // to ensure "UpdatedAt" is required (not null)
            if (UpdatedAt == null)
            {
                throw new InvalidDataException("UpdatedAt is a required property for BroadcastResult and cannot be null");
            }
            else
            {
                this.UpdatedAt = UpdatedAt;
            }
            // to ensure "CreatedAt" is required (not null)
            if (CreatedAt == null)
            {
                throw new InvalidDataException("CreatedAt is a required property for BroadcastResult and cannot be null");
            }
            else
            {
                this.CreatedAt = CreatedAt;
            }
            // to ensure "DeletedAt" is required (not null)
            if (DeletedAt == null)
            {
                throw new InvalidDataException("DeletedAt is a required property for BroadcastResult and cannot be null");
            }
            else
            {
                this.DeletedAt = DeletedAt;
            }
            this.ExternalStationId = ExternalStationId;
            this.ProgramId = ProgramId;
            this.ModelTypeId = ModelTypeId;
            this.StationId = StationId;
            this.FieldValues = FieldValues;
            this.Title = Title;
            this.Start = Start;
            this.Stop = Stop;
            this.GenreId = GenreId;
            this.Description = Description;
            this.ShortName = ShortName;
            this.MediumName = MediumName;
            this.Website = Website;
            this.Email = Email;
            this.Recommended = Recommended;
            this.Language = Language;
            this.Published = Published;
            this.RepetitionUid = RepetitionUid;
            this.RepetitionType = RepetitionType;
            this.RepetitionEnd = RepetitionEnd;
            this.RepetitionStart = RepetitionStart;
            this.RepetitionDays = RepetitionDays;
            this.PtyCodeId = PtyCodeId;
            this.Genre = Genre;
            this.Items = Items;
            this.Blocks = Blocks;
            this.Program = Program;
            this.Tags = Tags;
            this.Presenters = Presenters;
            this.ModelType = ModelType;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets DeletedAt
        /// </summary>
        [DataMember(Name="deleted_at", EmitDefaultValue=false)]
        public DateTime? DeletedAt { get; set; }

        /// <summary>
        /// Gets or Sets ExternalStationId
        /// </summary>
        [DataMember(Name="_external_station_id", EmitDefaultValue=false)]
        public long? ExternalStationId { get; set; }

        /// <summary>
        /// Gets or Sets ProgramId
        /// </summary>
        [DataMember(Name="program_id", EmitDefaultValue=false)]
        public long? ProgramId { get; set; }

        /// <summary>
        /// Gets or Sets ModelTypeId
        /// </summary>
        [DataMember(Name="model_type_id", EmitDefaultValue=false)]
        public long? ModelTypeId { get; set; }

        /// <summary>
        /// Gets or Sets StationId
        /// </summary>
        [DataMember(Name="station_id", EmitDefaultValue=false)]
        public long? StationId { get; set; }

        /// <summary>
        /// Gets or Sets FieldValues
        /// </summary>
        [DataMember(Name="field_values", EmitDefaultValue=false)]
        public Object FieldValues { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Start
        /// </summary>
        [DataMember(Name="start", EmitDefaultValue=false)]
        public DateTime? Start { get; set; }

        /// <summary>
        /// Gets or Sets Stop
        /// </summary>
        [DataMember(Name="stop", EmitDefaultValue=false)]
        public DateTime? Stop { get; set; }

        /// <summary>
        /// Gets or Sets GenreId
        /// </summary>
        [DataMember(Name="genre_id", EmitDefaultValue=false)]
        public long? GenreId { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ShortName
        /// </summary>
        [DataMember(Name="short_name", EmitDefaultValue=false)]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or Sets MediumName
        /// </summary>
        [DataMember(Name="medium_name", EmitDefaultValue=false)]
        public string MediumName { get; set; }

        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Recommended
        /// </summary>
        [DataMember(Name="recommended", EmitDefaultValue=false)]
        public bool? Recommended { get; set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="language", EmitDefaultValue=false)]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets Published
        /// </summary>
        [DataMember(Name="published", EmitDefaultValue=false)]
        public bool? Published { get; set; }

        /// <summary>
        /// Gets or Sets RepetitionUid
        /// </summary>
        [DataMember(Name="repetition_uid", EmitDefaultValue=false)]
        public string RepetitionUid { get; set; }


        /// <summary>
        /// Gets or Sets RepetitionEnd
        /// </summary>
        [DataMember(Name="repetition_end", EmitDefaultValue=false)]
        public DateTime? RepetitionEnd { get; set; }

        /// <summary>
        /// Gets or Sets RepetitionStart
        /// </summary>
        [DataMember(Name="repetition_start", EmitDefaultValue=false)]
        public DateTime? RepetitionStart { get; set; }

        /// <summary>
        /// Gets or Sets RepetitionDays
        /// </summary>
        [DataMember(Name="repetition_days", EmitDefaultValue=false)]
        public string RepetitionDays { get; set; }

        /// <summary>
        /// Gets or Sets PtyCodeId
        /// </summary>
        [DataMember(Name="pty_code_id", EmitDefaultValue=false)]
        public long? PtyCodeId { get; set; }

        /// <summary>
        /// Gets or Sets Genre
        /// </summary>
        [DataMember(Name="genre", EmitDefaultValue=false)]
        public BroadcastRelationsGenre Genre { get; set; }

        /// <summary>
        /// Gets or Sets Items
        /// </summary>
        [DataMember(Name="items", EmitDefaultValue=false)]
        public BroadcastRelationsItems Items { get; set; }

        /// <summary>
        /// Gets or Sets Blocks
        /// </summary>
        [DataMember(Name="blocks", EmitDefaultValue=false)]
        public BroadcastRelationsBlocks Blocks { get; set; }

        /// <summary>
        /// Gets or Sets Program
        /// </summary>
        [DataMember(Name="program", EmitDefaultValue=false)]
        public BlockRelationsProgram Program { get; set; }

        /// <summary>
        /// Gets or Sets Tags
        /// </summary>
        [DataMember(Name="tags", EmitDefaultValue=false)]
        public BroadcastRelationsTags Tags { get; set; }

        /// <summary>
        /// Gets or Sets Presenters
        /// </summary>
        [DataMember(Name="presenters", EmitDefaultValue=false)]
        public BroadcastRelationsPresenters Presenters { get; set; }

        /// <summary>
        /// Gets or Sets ModelType
        /// </summary>
        [DataMember(Name="model_type", EmitDefaultValue=false)]
        public BroadcastRelationsModelType ModelType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BroadcastResult {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  DeletedAt: ").Append(DeletedAt).Append("\n");
            sb.Append("  ExternalStationId: ").Append(ExternalStationId).Append("\n");
            sb.Append("  ProgramId: ").Append(ProgramId).Append("\n");
            sb.Append("  ModelTypeId: ").Append(ModelTypeId).Append("\n");
            sb.Append("  StationId: ").Append(StationId).Append("\n");
            sb.Append("  FieldValues: ").Append(FieldValues).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  Stop: ").Append(Stop).Append("\n");
            sb.Append("  GenreId: ").Append(GenreId).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ShortName: ").Append(ShortName).Append("\n");
            sb.Append("  MediumName: ").Append(MediumName).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Recommended: ").Append(Recommended).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  Published: ").Append(Published).Append("\n");
            sb.Append("  RepetitionUid: ").Append(RepetitionUid).Append("\n");
            sb.Append("  RepetitionType: ").Append(RepetitionType).Append("\n");
            sb.Append("  RepetitionEnd: ").Append(RepetitionEnd).Append("\n");
            sb.Append("  RepetitionStart: ").Append(RepetitionStart).Append("\n");
            sb.Append("  RepetitionDays: ").Append(RepetitionDays).Append("\n");
            sb.Append("  PtyCodeId: ").Append(PtyCodeId).Append("\n");
            sb.Append("  Genre: ").Append(Genre).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Blocks: ").Append(Blocks).Append("\n");
            sb.Append("  Program: ").Append(Program).Append("\n");
            sb.Append("  Tags: ").Append(Tags).Append("\n");
            sb.Append("  Presenters: ").Append(Presenters).Append("\n");
            sb.Append("  ModelType: ").Append(ModelType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BroadcastResult);
        }

        /// <summary>
        /// Returns true if BroadcastResult instances are equal
        /// </summary>
        /// <param name="input">Instance of BroadcastResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BroadcastResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.DeletedAt == input.DeletedAt ||
                    (this.DeletedAt != null &&
                    this.DeletedAt.Equals(input.DeletedAt))
                ) && 
                (
                    this.ExternalStationId == input.ExternalStationId ||
                    (this.ExternalStationId != null &&
                    this.ExternalStationId.Equals(input.ExternalStationId))
                ) && 
                (
                    this.ProgramId == input.ProgramId ||
                    (this.ProgramId != null &&
                    this.ProgramId.Equals(input.ProgramId))
                ) && 
                (
                    this.ModelTypeId == input.ModelTypeId ||
                    (this.ModelTypeId != null &&
                    this.ModelTypeId.Equals(input.ModelTypeId))
                ) && 
                (
                    this.StationId == input.StationId ||
                    (this.StationId != null &&
                    this.StationId.Equals(input.StationId))
                ) && 
                (
                    this.FieldValues == input.FieldValues ||
                    (this.FieldValues != null &&
                    this.FieldValues.Equals(input.FieldValues))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Start == input.Start ||
                    (this.Start != null &&
                    this.Start.Equals(input.Start))
                ) && 
                (
                    this.Stop == input.Stop ||
                    (this.Stop != null &&
                    this.Stop.Equals(input.Stop))
                ) && 
                (
                    this.GenreId == input.GenreId ||
                    (this.GenreId != null &&
                    this.GenreId.Equals(input.GenreId))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ShortName == input.ShortName ||
                    (this.ShortName != null &&
                    this.ShortName.Equals(input.ShortName))
                ) && 
                (
                    this.MediumName == input.MediumName ||
                    (this.MediumName != null &&
                    this.MediumName.Equals(input.MediumName))
                ) && 
                (
                    this.Website == input.Website ||
                    (this.Website != null &&
                    this.Website.Equals(input.Website))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Recommended == input.Recommended ||
                    (this.Recommended != null &&
                    this.Recommended.Equals(input.Recommended))
                ) && 
                (
                    this.Language == input.Language ||
                    (this.Language != null &&
                    this.Language.Equals(input.Language))
                ) && 
                (
                    this.Published == input.Published ||
                    (this.Published != null &&
                    this.Published.Equals(input.Published))
                ) && 
                (
                    this.RepetitionUid == input.RepetitionUid ||
                    (this.RepetitionUid != null &&
                    this.RepetitionUid.Equals(input.RepetitionUid))
                ) && 
                (
                    this.RepetitionType == input.RepetitionType ||
                    (this.RepetitionType != null &&
                    this.RepetitionType.Equals(input.RepetitionType))
                ) && 
                (
                    this.RepetitionEnd == input.RepetitionEnd ||
                    (this.RepetitionEnd != null &&
                    this.RepetitionEnd.Equals(input.RepetitionEnd))
                ) && 
                (
                    this.RepetitionStart == input.RepetitionStart ||
                    (this.RepetitionStart != null &&
                    this.RepetitionStart.Equals(input.RepetitionStart))
                ) && 
                (
                    this.RepetitionDays == input.RepetitionDays ||
                    (this.RepetitionDays != null &&
                    this.RepetitionDays.Equals(input.RepetitionDays))
                ) && 
                (
                    this.PtyCodeId == input.PtyCodeId ||
                    (this.PtyCodeId != null &&
                    this.PtyCodeId.Equals(input.PtyCodeId))
                ) && 
                (
                    this.Genre == input.Genre ||
                    (this.Genre != null &&
                    this.Genre.Equals(input.Genre))
                ) && 
                (
                    this.Items == input.Items ||
                    (this.Items != null &&
                    this.Items.Equals(input.Items))
                ) && 
                (
                    this.Blocks == input.Blocks ||
                    (this.Blocks != null &&
                    this.Blocks.Equals(input.Blocks))
                ) && 
                (
                    this.Program == input.Program ||
                    (this.Program != null &&
                    this.Program.Equals(input.Program))
                ) && 
                (
                    this.Tags == input.Tags ||
                    (this.Tags != null &&
                    this.Tags.Equals(input.Tags))
                ) && 
                (
                    this.Presenters == input.Presenters ||
                    (this.Presenters != null &&
                    this.Presenters.Equals(input.Presenters))
                ) && 
                (
                    this.ModelType == input.ModelType ||
                    (this.ModelType != null &&
                    this.ModelType.Equals(input.ModelType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.DeletedAt != null)
                    hashCode = hashCode * 59 + this.DeletedAt.GetHashCode();
                if (this.ExternalStationId != null)
                    hashCode = hashCode * 59 + this.ExternalStationId.GetHashCode();
                if (this.ProgramId != null)
                    hashCode = hashCode * 59 + this.ProgramId.GetHashCode();
                if (this.ModelTypeId != null)
                    hashCode = hashCode * 59 + this.ModelTypeId.GetHashCode();
                if (this.StationId != null)
                    hashCode = hashCode * 59 + this.StationId.GetHashCode();
                if (this.FieldValues != null)
                    hashCode = hashCode * 59 + this.FieldValues.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Start != null)
                    hashCode = hashCode * 59 + this.Start.GetHashCode();
                if (this.Stop != null)
                    hashCode = hashCode * 59 + this.Stop.GetHashCode();
                if (this.GenreId != null)
                    hashCode = hashCode * 59 + this.GenreId.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ShortName != null)
                    hashCode = hashCode * 59 + this.ShortName.GetHashCode();
                if (this.MediumName != null)
                    hashCode = hashCode * 59 + this.MediumName.GetHashCode();
                if (this.Website != null)
                    hashCode = hashCode * 59 + this.Website.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Recommended != null)
                    hashCode = hashCode * 59 + this.Recommended.GetHashCode();
                if (this.Language != null)
                    hashCode = hashCode * 59 + this.Language.GetHashCode();
                if (this.Published != null)
                    hashCode = hashCode * 59 + this.Published.GetHashCode();
                if (this.RepetitionUid != null)
                    hashCode = hashCode * 59 + this.RepetitionUid.GetHashCode();
                if (this.RepetitionType != null)
                    hashCode = hashCode * 59 + this.RepetitionType.GetHashCode();
                if (this.RepetitionEnd != null)
                    hashCode = hashCode * 59 + this.RepetitionEnd.GetHashCode();
                if (this.RepetitionStart != null)
                    hashCode = hashCode * 59 + this.RepetitionStart.GetHashCode();
                if (this.RepetitionDays != null)
                    hashCode = hashCode * 59 + this.RepetitionDays.GetHashCode();
                if (this.PtyCodeId != null)
                    hashCode = hashCode * 59 + this.PtyCodeId.GetHashCode();
                if (this.Genre != null)
                    hashCode = hashCode * 59 + this.Genre.GetHashCode();
                if (this.Items != null)
                    hashCode = hashCode * 59 + this.Items.GetHashCode();
                if (this.Blocks != null)
                    hashCode = hashCode * 59 + this.Blocks.GetHashCode();
                if (this.Program != null)
                    hashCode = hashCode * 59 + this.Program.GetHashCode();
                if (this.Tags != null)
                    hashCode = hashCode * 59 + this.Tags.GetHashCode();
                if (this.Presenters != null)
                    hashCode = hashCode * 59 + this.Presenters.GetHashCode();
                if (this.ModelType != null)
                    hashCode = hashCode * 59 + this.ModelType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
