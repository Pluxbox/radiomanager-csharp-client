/* 
 * RadioManager
 *
 * This OpenAPI 3 Document describes the functionality of the API v2 of RadioManager. Note that no rights can be derived from this Document and the true functionality of the API might differ.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@pluxbox.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = RadioManager.Client.SwaggerDateConverter;

namespace RadioManager.Model
{
    /// <summary>
    /// StationResultStation
    /// </summary>
    [DataContract]
        public partial class StationResultStation :  IEquatable<StationResultStation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StationResultStation" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="systemName">systemName.</param>
        /// <param name="shortName">shortName.</param>
        /// <param name="mediumName">mediumName.</param>
        /// <param name="website">website.</param>
        /// <param name="email">email.</param>
        /// <param name="keywords">keywords.</param>
        /// <param name="description">description.</param>
        /// <param name="sms">sms.</param>
        /// <param name="telephone">telephone.</param>
        /// <param name="genreId">genreId.</param>
        /// <param name="language">language.</param>
        /// <param name="active">active.</param>
        /// <param name="logoRectangle">logoRectangle.</param>
        /// <param name="logo128x128">logo128x128.</param>
        /// <param name="logo320x320">logo320x320.</param>
        /// <param name="logo600x600">logo600x600.</param>
        /// <param name="payOff">payOff.</param>
        /// <param name="ptyCode">ptyCode.</param>
        /// <param name="ptyType">ptyType.</param>
        /// <param name="stationKey">stationKey.</param>
        /// <param name="timezone">timezone.</param>
        /// <param name="metadataradioOrganisation">metadataradioOrganisation.</param>
        /// <param name="metadataradioStationId">metadataradioStationId.</param>
        /// <param name="startDays">startDays.</param>
        public StationResultStation(int? id = default(int?), string name = default(string), DateTime? createdAt = default(DateTime?), DateTime? updatedAt = default(DateTime?), string systemName = default(string), string shortName = default(string), string mediumName = default(string), string website = default(string), string email = default(string), List<string> keywords = default(List<string>), string description = default(string), string sms = default(string), string telephone = default(string), int? genreId = default(int?), string language = default(string), bool? active = default(bool?), string logoRectangle = default(string), string logo128x128 = default(string), string logo320x320 = default(string), string logo600x600 = default(string), string payOff = default(string), int? ptyCode = default(int?), string ptyType = default(string), string stationKey = default(string), string timezone = default(string), string metadataradioOrganisation = default(string), string metadataradioStationId = default(string), StationResultStationStartDays startDays = default(StationResultStationStartDays))
        {
            this.Id = id;
            this.Name = name;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.SystemName = systemName;
            this.ShortName = shortName;
            this.MediumName = mediumName;
            this.Website = website;
            this.Email = email;
            this.Keywords = keywords;
            this.Description = description;
            this.Sms = sms;
            this.Telephone = telephone;
            this.GenreId = genreId;
            this.Language = language;
            this.Active = active;
            this.LogoRectangle = logoRectangle;
            this.Logo128x128 = logo128x128;
            this.Logo320x320 = logo320x320;
            this.Logo600x600 = logo600x600;
            this.PayOff = payOff;
            this.PtyCode = ptyCode;
            this.PtyType = ptyType;
            this.StationKey = stationKey;
            this.Timezone = timezone;
            this.MetadataradioOrganisation = metadataradioOrganisation;
            this.MetadataradioStationId = metadataradioStationId;
            this.StartDays = startDays;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets SystemName
        /// </summary>
        [DataMember(Name="system_name", EmitDefaultValue=false)]
        public string SystemName { get; set; }

        /// <summary>
        /// Gets or Sets ShortName
        /// </summary>
        [DataMember(Name="short_name", EmitDefaultValue=false)]
        public string ShortName { get; set; }

        /// <summary>
        /// Gets or Sets MediumName
        /// </summary>
        [DataMember(Name="medium_name", EmitDefaultValue=false)]
        public string MediumName { get; set; }

        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Keywords
        /// </summary>
        [DataMember(Name="keywords", EmitDefaultValue=false)]
        public List<string> Keywords { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Sms
        /// </summary>
        [DataMember(Name="sms", EmitDefaultValue=false)]
        public string Sms { get; set; }

        /// <summary>
        /// Gets or Sets Telephone
        /// </summary>
        [DataMember(Name="telephone", EmitDefaultValue=false)]
        public string Telephone { get; set; }

        /// <summary>
        /// Gets or Sets GenreId
        /// </summary>
        [DataMember(Name="genre_id", EmitDefaultValue=false)]
        public int? GenreId { get; set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="language", EmitDefaultValue=false)]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets Active
        /// </summary>
        [DataMember(Name="active", EmitDefaultValue=false)]
        public bool? Active { get; set; }

        /// <summary>
        /// Gets or Sets LogoRectangle
        /// </summary>
        [DataMember(Name="logo_rectangle", EmitDefaultValue=false)]
        public string LogoRectangle { get; set; }

        /// <summary>
        /// Gets or Sets Logo128x128
        /// </summary>
        [DataMember(Name="logo_128x128", EmitDefaultValue=false)]
        public string Logo128x128 { get; set; }

        /// <summary>
        /// Gets or Sets Logo320x320
        /// </summary>
        [DataMember(Name="logo_320x320", EmitDefaultValue=false)]
        public string Logo320x320 { get; set; }

        /// <summary>
        /// Gets or Sets Logo600x600
        /// </summary>
        [DataMember(Name="logo_600x600", EmitDefaultValue=false)]
        public string Logo600x600 { get; set; }

        /// <summary>
        /// Gets or Sets PayOff
        /// </summary>
        [DataMember(Name="pay_off", EmitDefaultValue=false)]
        public string PayOff { get; set; }

        /// <summary>
        /// Gets or Sets PtyCode
        /// </summary>
        [DataMember(Name="pty_code", EmitDefaultValue=false)]
        public int? PtyCode { get; set; }

        /// <summary>
        /// Gets or Sets PtyType
        /// </summary>
        [DataMember(Name="pty_type", EmitDefaultValue=false)]
        public string PtyType { get; set; }

        /// <summary>
        /// Gets or Sets StationKey
        /// </summary>
        [DataMember(Name="station_key", EmitDefaultValue=false)]
        public string StationKey { get; set; }

        /// <summary>
        /// Gets or Sets Timezone
        /// </summary>
        [DataMember(Name="timezone", EmitDefaultValue=false)]
        public string Timezone { get; set; }

        /// <summary>
        /// Gets or Sets MetadataradioOrganisation
        /// </summary>
        [DataMember(Name="metadataradio_organisation", EmitDefaultValue=false)]
        public string MetadataradioOrganisation { get; set; }

        /// <summary>
        /// Gets or Sets MetadataradioStationId
        /// </summary>
        [DataMember(Name="metadataradio_station_id", EmitDefaultValue=false)]
        public string MetadataradioStationId { get; set; }

        /// <summary>
        /// Gets or Sets StartDays
        /// </summary>
        [DataMember(Name="start_days", EmitDefaultValue=false)]
        public StationResultStationStartDays StartDays { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StationResultStation {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  SystemName: ").Append(SystemName).Append("\n");
            sb.Append("  ShortName: ").Append(ShortName).Append("\n");
            sb.Append("  MediumName: ").Append(MediumName).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Keywords: ").Append(Keywords).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Sms: ").Append(Sms).Append("\n");
            sb.Append("  Telephone: ").Append(Telephone).Append("\n");
            sb.Append("  GenreId: ").Append(GenreId).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  Active: ").Append(Active).Append("\n");
            sb.Append("  LogoRectangle: ").Append(LogoRectangle).Append("\n");
            sb.Append("  Logo128x128: ").Append(Logo128x128).Append("\n");
            sb.Append("  Logo320x320: ").Append(Logo320x320).Append("\n");
            sb.Append("  Logo600x600: ").Append(Logo600x600).Append("\n");
            sb.Append("  PayOff: ").Append(PayOff).Append("\n");
            sb.Append("  PtyCode: ").Append(PtyCode).Append("\n");
            sb.Append("  PtyType: ").Append(PtyType).Append("\n");
            sb.Append("  StationKey: ").Append(StationKey).Append("\n");
            sb.Append("  Timezone: ").Append(Timezone).Append("\n");
            sb.Append("  MetadataradioOrganisation: ").Append(MetadataradioOrganisation).Append("\n");
            sb.Append("  MetadataradioStationId: ").Append(MetadataradioStationId).Append("\n");
            sb.Append("  StartDays: ").Append(StartDays).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StationResultStation);
        }

        /// <summary>
        /// Returns true if StationResultStation instances are equal
        /// </summary>
        /// <param name="input">Instance of StationResultStation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StationResultStation input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.SystemName == input.SystemName ||
                    (this.SystemName != null &&
                    this.SystemName.Equals(input.SystemName))
                ) && 
                (
                    this.ShortName == input.ShortName ||
                    (this.ShortName != null &&
                    this.ShortName.Equals(input.ShortName))
                ) && 
                (
                    this.MediumName == input.MediumName ||
                    (this.MediumName != null &&
                    this.MediumName.Equals(input.MediumName))
                ) && 
                (
                    this.Website == input.Website ||
                    (this.Website != null &&
                    this.Website.Equals(input.Website))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Keywords == input.Keywords ||
                    this.Keywords != null &&
                    input.Keywords != null &&
                    this.Keywords.SequenceEqual(input.Keywords)
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Sms == input.Sms ||
                    (this.Sms != null &&
                    this.Sms.Equals(input.Sms))
                ) && 
                (
                    this.Telephone == input.Telephone ||
                    (this.Telephone != null &&
                    this.Telephone.Equals(input.Telephone))
                ) && 
                (
                    this.GenreId == input.GenreId ||
                    (this.GenreId != null &&
                    this.GenreId.Equals(input.GenreId))
                ) && 
                (
                    this.Language == input.Language ||
                    (this.Language != null &&
                    this.Language.Equals(input.Language))
                ) && 
                (
                    this.Active == input.Active ||
                    (this.Active != null &&
                    this.Active.Equals(input.Active))
                ) && 
                (
                    this.LogoRectangle == input.LogoRectangle ||
                    (this.LogoRectangle != null &&
                    this.LogoRectangle.Equals(input.LogoRectangle))
                ) && 
                (
                    this.Logo128x128 == input.Logo128x128 ||
                    (this.Logo128x128 != null &&
                    this.Logo128x128.Equals(input.Logo128x128))
                ) && 
                (
                    this.Logo320x320 == input.Logo320x320 ||
                    (this.Logo320x320 != null &&
                    this.Logo320x320.Equals(input.Logo320x320))
                ) && 
                (
                    this.Logo600x600 == input.Logo600x600 ||
                    (this.Logo600x600 != null &&
                    this.Logo600x600.Equals(input.Logo600x600))
                ) && 
                (
                    this.PayOff == input.PayOff ||
                    (this.PayOff != null &&
                    this.PayOff.Equals(input.PayOff))
                ) && 
                (
                    this.PtyCode == input.PtyCode ||
                    (this.PtyCode != null &&
                    this.PtyCode.Equals(input.PtyCode))
                ) && 
                (
                    this.PtyType == input.PtyType ||
                    (this.PtyType != null &&
                    this.PtyType.Equals(input.PtyType))
                ) && 
                (
                    this.StationKey == input.StationKey ||
                    (this.StationKey != null &&
                    this.StationKey.Equals(input.StationKey))
                ) && 
                (
                    this.Timezone == input.Timezone ||
                    (this.Timezone != null &&
                    this.Timezone.Equals(input.Timezone))
                ) && 
                (
                    this.MetadataradioOrganisation == input.MetadataradioOrganisation ||
                    (this.MetadataradioOrganisation != null &&
                    this.MetadataradioOrganisation.Equals(input.MetadataradioOrganisation))
                ) && 
                (
                    this.MetadataradioStationId == input.MetadataradioStationId ||
                    (this.MetadataradioStationId != null &&
                    this.MetadataradioStationId.Equals(input.MetadataradioStationId))
                ) && 
                (
                    this.StartDays == input.StartDays ||
                    (this.StartDays != null &&
                    this.StartDays.Equals(input.StartDays))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                if (this.SystemName != null)
                    hashCode = hashCode * 59 + this.SystemName.GetHashCode();
                if (this.ShortName != null)
                    hashCode = hashCode * 59 + this.ShortName.GetHashCode();
                if (this.MediumName != null)
                    hashCode = hashCode * 59 + this.MediumName.GetHashCode();
                if (this.Website != null)
                    hashCode = hashCode * 59 + this.Website.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.Keywords != null)
                    hashCode = hashCode * 59 + this.Keywords.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Sms != null)
                    hashCode = hashCode * 59 + this.Sms.GetHashCode();
                if (this.Telephone != null)
                    hashCode = hashCode * 59 + this.Telephone.GetHashCode();
                if (this.GenreId != null)
                    hashCode = hashCode * 59 + this.GenreId.GetHashCode();
                if (this.Language != null)
                    hashCode = hashCode * 59 + this.Language.GetHashCode();
                if (this.Active != null)
                    hashCode = hashCode * 59 + this.Active.GetHashCode();
                if (this.LogoRectangle != null)
                    hashCode = hashCode * 59 + this.LogoRectangle.GetHashCode();
                if (this.Logo128x128 != null)
                    hashCode = hashCode * 59 + this.Logo128x128.GetHashCode();
                if (this.Logo320x320 != null)
                    hashCode = hashCode * 59 + this.Logo320x320.GetHashCode();
                if (this.Logo600x600 != null)
                    hashCode = hashCode * 59 + this.Logo600x600.GetHashCode();
                if (this.PayOff != null)
                    hashCode = hashCode * 59 + this.PayOff.GetHashCode();
                if (this.PtyCode != null)
                    hashCode = hashCode * 59 + this.PtyCode.GetHashCode();
                if (this.PtyType != null)
                    hashCode = hashCode * 59 + this.PtyType.GetHashCode();
                if (this.StationKey != null)
                    hashCode = hashCode * 59 + this.StationKey.GetHashCode();
                if (this.Timezone != null)
                    hashCode = hashCode * 59 + this.Timezone.GetHashCode();
                if (this.MetadataradioOrganisation != null)
                    hashCode = hashCode * 59 + this.MetadataradioOrganisation.GetHashCode();
                if (this.MetadataradioStationId != null)
                    hashCode = hashCode * 59 + this.MetadataradioStationId.GetHashCode();
                if (this.StartDays != null)
                    hashCode = hashCode * 59 + this.StartDays.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
